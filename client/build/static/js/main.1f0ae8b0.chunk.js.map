{"version":3,"sources":["constants/actionTypes.js","api/index.js","components/Form/styles.js","components/Form/Form.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/post.js","components/Posts/styles.js","components/Posts/Posts.js","images/memories.png","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["UPDATE","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","theme","root","margin","spacing","paper","padding","form","display","flexWrap","justifyContent","fileInput","width","buttonSubmit","marginBottom","Form","currentId","setCurrentId","useState","creator","title","message","tags","selectedFile","postData","setPostData","post","useSelector","state","posts","find","p","_id","classes","useStyles","dispatch","useDispatch","useEffect","clear","Paper","className","autoComplete","noValidate","onSubmit","e","preventDefault","a","api","data","type","payload","console","error","newPost","log","createPost","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","split","map","tag","trim","multiple","onDone","base64","Button","color","size","onClick","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","flexDirection","borderRadius","position","overlay","top","left","overlay2","right","grid","details","cardActions","Post","Card","CardMedia","image","moment","createdAt","fromNow","style","fontSize","textAlign","calendar","CardContent","gutterBottom","component","CardActions","marginRight","likeCount","mainContainer","alignItems","smMargin","actionDiv","Posts","length","Grid","container","item","xs","sm","md","CircularProgress","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxwidth","AppBar","align","src","memories","alt","Grow","in","combineReducers","action","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f0ae8b0.chunk.js","sourcesContent":["export const CREATE = 'CREATE'\r\nexport const UPDATE = 'UPDATE'\r\nexport const DELETE = 'DELETE'\r\nexport const FETCH_ALL = 'FETCH_ALL'\r\n// export const LIKE = 'LIKE'\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://make-memories-project.herokuapp.com/posts'\r\n\r\nexport const fetchPosts = () => axios.get(url)\r\nexport const createPost = (newPost) => axios.post(url, newPost)\r\nexport const updatePost = (id, updatedPost) =>\r\n    axios.patch(`${url}/${id}`, updatedPost)\r\n\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`)\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`)\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    fileInput: {\r\n        width: '97%',\r\n        margin: '10px 0',\r\n    },\r\n\r\n    buttonSubmit: {\r\n        marginBottom: 10,\r\n    },\r\n}))\r\n","import React, { useState, useEffect } from 'react'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { createPost, updatePost } from '../../actions/posts'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: '',\r\n    })\r\n\r\n    const post = useSelector((state) =>\r\n        currentId ? state.posts.find((p) => p._id === currentId) : null\r\n    )\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post)\r\n    }, [post])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, postData))\r\n        } else {\r\n            dispatch(createPost(postData))\r\n        }\r\n        clear()\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null)\r\n        setPostData({\r\n            creator: '',\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form\r\n                autoComplete='off'\r\n                noValidate\r\n                className={`${classes.root} ${classes.form}`}\r\n                onSubmit={handleSubmit}>\r\n                <Typography variant='h6'>\r\n                    {currentId ? 'Editing' : 'Creating'} a Memory\r\n                </Typography>\r\n\r\n                <TextField\r\n                    name='creator'\r\n                    variant='outlined'\r\n                    label='Creator'\r\n                    fullWidth\r\n                    value={postData.creator}\r\n                    onChange={(e) =>\r\n                        setPostData({\r\n                            ...postData,\r\n                            creator: e.target.value,\r\n                        })\r\n                    }\r\n                />\r\n\r\n                <TextField\r\n                    name='title'\r\n                    variant='outlined'\r\n                    label='Title'\r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={(e) =>\r\n                        setPostData({ ...postData, title: e.target.value })\r\n                    }\r\n                />\r\n\r\n                <TextField\r\n                    name='message'\r\n                    variant='outlined'\r\n                    label='Message'\r\n                    fullWidth\r\n                    value={postData.message}\r\n                    onChange={(e) =>\r\n                        setPostData({ ...postData, message: e.target.value })\r\n                    }\r\n                />\r\n\r\n                <TextField\r\n                    name='tags'\r\n                    variant='outlined'\r\n                    label='Tags'\r\n                    fullWidth\r\n                    value={postData.tags}\r\n                    onChange={(e) =>\r\n                        setPostData({\r\n                            ...postData,\r\n                            tags: e.target.value\r\n                                .split(',')\r\n                                .map((tag) => tag.trim()),\r\n                        })\r\n                    }\r\n                />\r\n\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type='file'\r\n                        multiple={false}\r\n                        onDone={({ base64 }) =>\r\n                            setPostData({ ...postData, selectedFile: base64 })\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                <Button\r\n                    className={classes.buttonSubmit}\r\n                    variant='contained'\r\n                    color='primary'\r\n                    size='large'\r\n                    type='submit'\r\n                    fullWidth>\r\n                    Submit\r\n                </Button>\r\n\r\n                <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    size='small'\r\n                    onClick={clear}\r\n                    fullWidth>\r\n                    Clear\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { FETCH_ALL, UPDATE, CREATE, DELETE } from '../constants/actionTypes'\r\nimport * as api from '../api'\r\n\r\n// Action creators - return an action\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts()\r\n        dispatch({ type: FETCH_ALL, payload: data })\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post)\r\n        dispatch({ type: CREATE, payload: data })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post)\r\n        dispatch({ type: UPDATE, payload: data })\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id)\r\n\r\n        dispatch({ type: DELETE, payload: id })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id)\r\n\r\n        dispatch({ type: UPDATE, payload: data })\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        backgroundBlendMode: 'darken',\r\n    },\r\n\r\n    border: {\r\n        border: 'solid',\r\n    },\r\n\r\n    fullHeightCard: {\r\n        height: '100%',\r\n    },\r\n\r\n    card: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '15px',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '20px',\r\n        color: 'white',\r\n    },\r\n\r\n    overlay2: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        right: '20px',\r\n        color: 'white',\r\n    },\r\n\r\n    grid: {\r\n        display: 'flex',\r\n    },\r\n\r\n    details: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '5px 20px',\r\n    },\r\n\r\n    title: {\r\n        padding: '0 0',\r\n    },\r\n\r\n    cardActions: {\r\n        padding: '0 16px 8px 16px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n})\r\n","import React from 'react'\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\nimport moment from 'moment'\r\nimport useStyles from './styles'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts'\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={\r\n                    post.selectedFile ||\r\n                    'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'\r\n                }\r\n                title={post.title}\r\n            />\r\n            <div className={classes.overlay}>\r\n                <Typography variant='h6'>{post.creator}</Typography>\r\n                <Typography variant='body2'>\r\n                    {moment(post.createdAt).fromNow()}\r\n                </Typography>\r\n            </div>\r\n\r\n            <div className={classes.overlay2}>\r\n                <Button\r\n                    style={{ color: 'white' }}\r\n                    size='small'\r\n                    onClick={() => {\r\n                        setCurrentId(post._id)\r\n                    }}>\r\n                    <MoreHorizIcon fontSize='medium' />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.details}>\r\n                <Typography variant='body2' color='textSecondary'>\r\n                    {/* {post.tags[0].split(',').map((tag) => `#${tag.trim()} `)} */}\r\n                    {post.tags.map((tag) => `#${tag} `)}\r\n                </Typography>\r\n\r\n                <Typography\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    style={{ textAlign: 'right' }}>\r\n                    {moment(post.createdAt).calendar()}\r\n                </Typography>\r\n            </div>\r\n\r\n            <CardContent>\r\n                <Typography className={classes.title} variant='h4' gutterBottom>\r\n                    {post.title}\r\n                </Typography>\r\n\r\n                <Typography\r\n                    className={classes.title}\r\n                    variant='body2'\r\n                    color='textSecondary'\r\n                    component='p'>\r\n                    {post.message}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions className={classes.cardActions}>\r\n                <Button\r\n                    size='small'\r\n                    color='primary'\r\n                    onClick={() => {\r\n                        dispatch(likePost(post._id))\r\n                    }}>\r\n                    <ThumbUpAltIcon\r\n                        fontSize='small'\r\n                        style={{ marginRight: '5px' }}\r\n                    />{' '}\r\n                    {post.likeCount}\r\n                </Button>\r\n\r\n                <Button\r\n                    size='small'\r\n                    color='primary'\r\n                    onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize='small' /> Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    actionDiv: {\r\n        textAlign: 'center',\r\n    },\r\n}))\r\n","import React from 'react'\r\nimport { Grid, CircularProgress } from '@material-ui/core'\r\nimport { useSelector } from 'react-redux'\r\nimport Post from './Post/post.js'\r\nimport useStyles from './styles'\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n    const posts = useSelector((state) => state.posts)\r\n    const classes = useStyles()\r\n\r\n    return !posts.length ? (\r\n        <CircularProgress />\r\n    ) : (\r\n        <Grid\r\n            key={1}\r\n            className={classes.container}\r\n            container\r\n            alignItems='stretch'\r\n            spacing={3}>\r\n            {posts.map((post) => (\r\n                <Grid key={post.id} item xs={12} sm={6} md={6}>\r\n                    <Post post={post} setCurrentId={setCurrentId} />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 0',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    heading: {\r\n        color: 'rgba(0,183,255,1)',\r\n    },\r\n\r\n    image: {\r\n        marginLeft: '15px',\r\n    },\r\n\r\n    [theme.breakpoints.down('sm')]: {\r\n        mainContainer: {\r\n            flexDirection: 'column-reverse',\r\n        },\r\n    },\r\n}))\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { getPosts } from './actions/posts'\r\n\r\nimport Form from './components/Form/Form'\r\nimport Posts from './components/Posts/Posts'\r\nimport memories from './images/memories.png'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst App = () => {\r\n    const [currentId, setCurrentId] = useState(null)\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container maxwidth='lg'>\r\n            <AppBar\r\n                className={classes.appBar}\r\n                position='static'\r\n                color='inherit'>\r\n                <Typography\r\n                    className={classes.heading}\r\n                    variant='h2'\r\n                    align='center'>\r\n                    Memories\r\n                </Typography>\r\n                <img\r\n                    className={classes.image}\r\n                    src={memories}\r\n                    alt='memories'\r\n                    height='60'\r\n                />\r\n            </AppBar>\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid\r\n                        className={classes.mainContainer}\r\n                        container\r\n                        justifyContent='space-between'\r\n                        alignItems='stretch'\r\n                        spacing={3}>\r\n                        <Grid item xs={12} sm={12} md={8}>\r\n                            <Posts setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={4}>\r\n                            <Form\r\n                                currentId={currentId}\r\n                                setCurrentId={setCurrentId}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers } from 'redux'\r\nimport posts from './posts'\r\n\r\nexport default combineReducers({ posts })\r\n","// Reducer is a Function which accepts a state and actions, then\r\n// based on action something has to be done!\r\n\r\nexport default (posts = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ALL':\r\n            return action.payload\r\n\r\n        case 'CREATE':\r\n            return [...posts, action.payload]\r\n\r\n        case 'UPDATE':\r\n        case 'LIKE':\r\n            return posts.map((post) =>\r\n                post._id === action.payload._id ? action.payload : post\r\n            )\r\n\r\n        case 'DELETE':\r\n            return posts.filter((post) => post._id !== action.payload)\r\n\r\n        default:\r\n            return posts\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\nimport './index.css'\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}